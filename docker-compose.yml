version: '3.8'

services:
  api:
    image: chhaichivon/spring-demo-api:v1.0.5
    container_name: shop_spring_api
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    depends_on:
      - db
    environment:
      SPRING_APPLICATION_JSON: '{
                "spring.datasource.url"  : "jdbc:mysql://db:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
                "spring.datasource.username" : "$MYSQLDB_USER",
                "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
                "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
                "spring.jpa.hibernate.ddl-auto" : "update",
                "spring.datasource.initialization-mode" : "always"
              }'
    volumes:
      - .m2:/root/.m2
    networks:
      - backend
      - frontend
  db:
    image: mysql:5.7
    container_name: shop_mysql_db
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - mysql-data:/var/lib/mysql/data
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=root--execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    networks:
      - backend
  app:
    image: chhaichivon/react-demo-app:v1.0.0
    build:
      context: .
      args:
        REACT_APP_API_BASE_URL: http://127.0.0.1:8080/api
    container_name: shop_react_app
    restart: always
    depends_on:
      - api
    networks:
      - frontend

volumes:
  mysql-data:

networks:
  backend:
  frontend: